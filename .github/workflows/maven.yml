# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      database:
        image: postgres:15
        env:
          POSTGRES_USER: ci_user
          POSTGRES_PASSWORD: ci_password
          POSTGRES_DB: ci_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ci_user -d ci_test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Wait for DB
        run: |
          echo "Esperando a que Postgres est√© listo..."
          until pg_isready -h localhost -p 5432 -U ci_user; do
            sleep 2
          done

      - name: Build with Maven
        run: mvn -B package --file backArquitectura/pom.xml

      - name: Run tests
        env:
          SPRING_PROFILES_ACTIVE: docker
          DB_HOST_LOCAL: database
          DB_NAME_LOCAL: ci_test_db
          DB_USER_LOCAL: ci_user
          DB_PASSWORD_LOCAL: ci_password
        run: mvn -B test --file backArquitectura/pom.xml
